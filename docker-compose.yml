version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/src
      - /src/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/src:/app/src/
    ports:
      - "8000:8000"
    networks:
      - backend-network
    env_file:
      - backend/.env
    depends_on:
      db_back:
        condition: service_healthy


  db_back:
    image: postgres:16-alpine
    networks:
      - backend-network
    container_name: db_back
    env_file:
      - backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -p ${POSTGRES_PORT}
      interval: 5s
      timeout: 3s
      retries: 3


networks:
  backend-network:
    name: backend-network-dev
    external: true
volumes:
  postgres_data: